
import java.util.HashMap;
import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author conzty01
 */
public class FractionGUIFrame extends javax.swing.JFrame {

    MyStack<Fraction> stk = new MyStack();
    HashMap<String, Fraction> memory = new HashMap<String, Fraction>();

    public FractionGUIFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Display = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        EntryPanel = new javax.swing.JPanel();
        NumberEntry = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        MiscButtons = new javax.swing.JPanel();
        SpecialChars = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        EnterPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Display.setLayout(new java.awt.BorderLayout());

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Display.add(jTextField1, java.awt.BorderLayout.PAGE_END);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        Display.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(Display, java.awt.BorderLayout.CENTER);

        EntryPanel.setLayout(new java.awt.BorderLayout());

        NumberEntry.setLayout(new java.awt.GridLayout(4, 4));

        jButton5.setText("7");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton5);

        jButton6.setText("8");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton6);

        jButton7.setText("9");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton7);

        jButton8.setText("+");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton8);

        jButton9.setText("4");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton9);

        jButton10.setText("5");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton10);

        jButton11.setText("6");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton11);

        jButton12.setText("-");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton12);

        jButton13.setText("1");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton13);

        jButton14.setText("2");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton14);

        jButton15.setText("3");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton15);

        jButton16.setText("*");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton16);

        jButton17.setText("0");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton17);

        jButton18.setText(".");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton18);

        jButton19.setText("~");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton19);

        jButton20.setText("/");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        NumberEntry.add(jButton20);

        EntryPanel.add(NumberEntry, java.awt.BorderLayout.LINE_END);

        MiscButtons.setLayout(new java.awt.BorderLayout());

        SpecialChars.setLayout(new java.awt.GridLayout(2, 2));

        jButton21.setText("(");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        SpecialChars.add(jButton21);

        jButton22.setText(")");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        SpecialChars.add(jButton22);

        jButton2.setText("Sto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        SpecialChars.add(jButton2);

        jButton3.setText("Rec");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        SpecialChars.add(jButton3);

        MiscButtons.add(SpecialChars, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jButton4.setText("Backspace");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        jPanel2.add(jButton4, java.awt.BorderLayout.CENTER);

        MiscButtons.add(jPanel2, java.awt.BorderLayout.CENTER);

        EntryPanel.add(MiscButtons, java.awt.BorderLayout.LINE_START);

        EnterPanel.setLayout(new java.awt.BorderLayout());
        EntryPanel.add(EnterPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Space");
        jButton1.setToolTipText("");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButton(evt);
            }
        });
        jPanel1.add(jButton1, java.awt.BorderLayout.PAGE_START);

        jButton23.setText("Enter");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterFunction(evt);
            }
        });
        jPanel1.add(jButton23, java.awt.BorderLayout.CENTER);

        EntryPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(EntryPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void parseButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseButton
        String pressedButton = evt.getActionCommand();
        String tmp = jTextField1.getText();

        switch (pressedButton) {
            case "Space":
                jTextField1.setText(tmp + " ");
                break;
            case "Backspace":
                if (tmp.length() != 0) {
                    String subTmp = tmp.substring(0, tmp.length() - 1);
                    jTextField1.setText(subTmp);

                } else if (!stk.isEmpty()) {
                    stk.pop();
                    jTextArea1.setText(stk.toString());
                }
                break;
            case "Sto":
                jTextField1.setText(tmp + " " + "S");
                break;
            case "Rec":
                jTextField1.setText(tmp + " " + "R");
                break;
            default:
                jTextField1.setText(tmp + pressedButton);
        }

    }//GEN-LAST:event_parseButton

    private void enterFunction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterFunction
        char fChar;
        double num;
        boolean isNum = false;
        boolean isNeg = false;
        int numBottom, numTop;
        String top, bottom, tmp;
        String textFieldVal = jTextField1.getText();

        StringTokenizer line = new StringTokenizer(textFieldVal, " ()+-*/~", true);

        while (line.hasMoreTokens()) {

            try {
                String token = line.nextToken();
                fChar = token.charAt(0);

                switch (fChar) {
                    case '(':

                        top = line.nextToken();
                        // '/' character dividing the fraction
                        tmp = line.nextToken();
                        bottom = line.nextToken();
                        // ')' character closing fraction
                        tmp = line.nextToken();

                        // Create Fraction object and push onto the stack
                        Fraction fTmp = new Fraction(new Integer(top), new Integer(bottom), false);
                        stk.push(fTmp);

                        jTextArea1.setText(stk.toString());

                        break;
                    case '+':
                        Fraction f1 = stk.pop();
                        Fraction f2 = stk.pop();
                        Fraction resAdd = f1.add(f2);
                        stk.push(resAdd);
                        jTextArea1.setText(stk.toString());
                        break;
                    case ' ':
                        break;
                    case '/':
                        Fraction f3 = stk.pop();
                        Fraction f4 = stk.pop();
                        Fraction resDiv = f4.divide(f3);
                        stk.push(resDiv);
                        jTextArea1.setText(stk.toString());
                        break;
                    case '-':
                        Fraction f5 = stk.pop();
                        Fraction f6 = stk.pop();
                        Fraction resSub = f5.subtract(f6);
                        stk.push(resSub);
                        jTextArea1.setText(stk.toString());
                        break;
                    case '*':
                        Fraction f7 = stk.pop();
                        Fraction f8 = stk.pop();
                        Fraction resMul = f7.multiply(f8);
                        stk.push(resMul);
                        jTextArea1.setText(stk.toString());
                        break;
                    case 'S':
                        // The below line parses past the space between the Save character and the label
                        //tmp = line.nextToken();
                        // The below line is the label for the saved fraction
                        //token = line.nextToken();
                        Fraction sFrac = stk.pop();
                        memory.put("a", sFrac);
                        stk.push(sFrac);
                        jTextArea1.setText(stk.toString());
                        break;
                    case 'R':
                        // The below line parses past the space between the Save character and the label
                        //tmp = line.nextToken();
                        // The below line is the label for the saved fraction
                        //token = line.nextToken();
                        Fraction rFrac = memory.get("a");
                        stk.push(rFrac);
                        jTextArea1.setText(stk.toString());
                        break;
                    case '~':
                        Fraction tmpF1 = stk.pop();
                        int a1 = 0 - tmpF1.getNumer();
                        int a2 = tmpF1.getDenom();
                        boolean a3 = tmpF1.getIsDec();
                        stk.push(new Fraction(0 - tmpF1.getNumer(), tmpF1.getDenom(), tmpF1.getIsDec()));
                        jTextArea1.setText(stk.toString());
                        break;
                    default:
                        isNum = true;
                        num = new Double(token);
                        numBottom = 1;

                        while (num - (int) num != 0) {
                            numBottom = numBottom * 10;
                            num = num * 10;
                        }
                        numTop = (int) num;

                        stk.push(new Fraction(numTop, numBottom, true));
                        jTextArea1.setText(stk.toString());
                        break;
                }

                // Below line cathces malformed expression exceptions
            } catch (Exception ex) {
                System.err.println(ex.getMessage());
                System.err.println("Malformed Expression");
            }
            jTextField1.setText("");
        }
    }//GEN-LAST:event_enterFunction

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FractionGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FractionGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FractionGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FractionGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FractionGUIFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Display;
    private javax.swing.JPanel EnterPanel;
    private javax.swing.JPanel EntryPanel;
    private javax.swing.JPanel MiscButtons;
    private javax.swing.JPanel NumberEntry;
    private javax.swing.JPanel SpecialChars;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
